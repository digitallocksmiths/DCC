// # ---------------------------------------------------------------------------------------------
// # $URL$
// # $Header:  $

#ifndef __SKC_GEN_H__
#define __SKC_GEN_H__

#ifdef DEBUG_INCLUDE_FILES 
#pragma message("     including " __FILE__)
#endif // DEBUG_INCLUDE_FILES


//============================================================================================
// ASM directives

#define ASM_DIRECTIVE_SEGMENT_BEGIN ".segment"                  // declare a new segment    (operand is the segment name)"
#define ASM_DIRECTIVE_SEGMENT_END   ".endseg"                   // end a segment            (operand is empty)"

#define ASM_DIRECTIVE_SPACE         ".space"                    // reserves uninitialized space       (operand is the count of bytes to be reserved)"
#define ASM_DIRECTIVE_BYTE          ".byte"                     // defines an initialized byte value  (operand is a single 8 bit )"
#define ASM_DIRECTIVE_SHORT         ".word"                     // defines an initialized word value  (operand is a single 16 bit value )"
#define ASM_DIRECTIVE_LONG          ".dword"                    // defines an initialized dword value (operand is a single 32 bit value )"


//============================================================================================
// ASM file layout control

#define LABEL_WIDTH   20            // label[width] :: opcode[width] :: operand[width] :: "; " :: comment[]
#define OPCODE_WIDTH  10
#define OPERAND_WIDTH 15


//============================================================================================
// Public functions

BOOL    GenIsData(WORD nUse);
BOOL    GenIsFunction(WORD nUse);

LPSTR   GenLabel(LPSTR PreFix);
void    GenAsmOut(FILE *hOut, LPSTR pszLabel, LPSTR pszOpcode, LPSTR pszOperand, LPSTR pszComment, BOOL fNL);

#include "GenData.h"
#include "GenExpression.h"
#include "GenFunction.h"

#endif // __SKC_GEN_H__

/* eof */
