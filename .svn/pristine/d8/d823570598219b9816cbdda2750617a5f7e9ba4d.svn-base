; SKC AVR Output - V1(Jan  3 2020)

#define		_IO_SPL	0x3D
#define		_IO_SPH	0x3E

                                                            ; ##########################
                                                            ; # Start of CONST segment #
                     .section    CONST, "a"                 ; ##########################
                     ;.endseg                               ; === End of CONST segment ===


                                                            ; #########################
                                                            ; # Start of INIT segment #
                     .section    INIT,  "a"                 ; #########################
                                                            ; This is the source of the initialization data
                                                            ; #########################
                     .section    .data                      ; # Start of DATA segment #
                                                            ; #########################
                                                            ; This is where the initialization data will be copied to
                     ;.endseg                               ; === End of DATA segment ===


                                                            ; ########################
                     .section    .bss                       ; # Start of BSS segment #
                                                            ; ########################
                                                            ; Here starts the uninitialized data
                     ;.endseg                               ; === End of BSS segment ===


                                                            ; #########################
                     .section    .text                      ; # Start of TEXT segment #
                                                            ; #########################
                                                            ; Here starts the executable code

                     .global   Adding
Adding:              ; ###########################################
                     ; # Function: Adding                   
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+9, Return Address     
                     ; #         : @Y+7, Preserved Frame Pointer
                     ; #   Locals: @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , a1  size=2 int , Class[_____]
                     ; #         : @Y+1  , a2  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 6       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 6                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000001
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x08                    ;   1: const 8
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     ldd       r8, Y+5                      ;   2: a
                     ldd       r9, Y+6                      ;   2:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+3                      ;   2: a1
                     ldd       r7, Y+4                      ;   2:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ldd       r6, Y+1                      ;   2: a2
                     ldd       r7, Y+2                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000001
                     ; #### exit ################           ; 
L_Exit_000000:       adiw      r28, 6                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Subtracting
Subtracting:         ; ###########################################
                     ; # Function: Subtracting              
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+9, Return Address     
                     ; #         : @Y+7, Preserved Frame Pointer
                     ; #   Locals: @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , a1  size=2 int , Class[_____]
                     ; #         : @Y+1  , a2  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 6       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 6                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000003
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x0a                    ;   1: const 10
                     mov       r4, r26                      ;   1:
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r5, r26                      ;   1:
                     sub       r4, r5                       ;   1: Sub8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     sub       r4, r5                       ;   1: Sub8
                     ldi       r26, 0x03                    ;   1: const 3
                     mov       r5, r26                      ;   1:
                     sub       r4, r5                       ;   1: Sub8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x09                    ;   1: const 9
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     sub       r6, r8                       ;   1: Sub16
                     sbc       r7, r9                       ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     ldd       r8, Y+5                      ;   2: a
                     ldd       r9, Y+6                      ;   2:
                     sub       r6, r8                       ;   1: Sub16
                     sbc       r7, r9                       ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     sub       r4, r6                       ;   1: Sub16
                     sbc       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000003
                     ; #### exit ################           ; 
L_Exit_000002:       adiw      r28, 6                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Multiplying
Multiplying:         ; ###########################################
                     ; # Function: Multiplying              
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+9, Return Address     
                     ; #         : @Y+7, Preserved Frame Pointer
                     ; #   Locals: @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , a1  size=2 int , Class[_____]
                     ; #         : @Y+1  , a2  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 6       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 6                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000005
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x0c                    ;   1: const 12
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldi       r26, 0x04                    ;   1: const 4
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     ldd       r8, Y+5                      ;   2: a
                     ldd       r9, Y+6                      ;   2:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+3                      ;   2: a1
                     ldd       r7, Y+4                      ;   2:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldd       r6, Y+1                      ;   2: a2
                     ldd       r7, Y+2                      ;   2:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000005
                     ; #### exit ################           ; 
L_Exit_000004:       adiw      r28, 6                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Dividing
Dividing:            ; ###########################################
                     ; # Function: Dividing                 
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+9, Return Address     
                     ; #         : @Y+7, Preserved Frame Pointer
                     ; #   Locals: @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , b  size=2 int , Class[_____]
                     ; #         : @Y+1  , c  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 6       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 6                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000035
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x18                    ;   1: const 24
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x18                    ;   1: const 24
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     mov       r24, r4                      ;   1: Div 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r24                      ;   1:
                     mov       r5, r25                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x18                    ;   1: const 24
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Div 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r24                      ;   1:
                     mov       r5, r25                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldi       r26, 0x1c                    ;   1: const 28
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x07                    ;   1: const 7
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Div 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r24                      ;   1:
                     mov       r5, r25                      ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000035
                     ; #### exit ################           ; 
L_Exit_000034:       adiw      r28, 6                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Moding
Moding:              ; ###########################################
                     ; # Function: Moding                   
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+9, Return Address     
                     ; #         : @Y+7, Preserved Frame Pointer
                     ; #   Locals: @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , b  size=2 int , Class[_____]
                     ; #         : @Y+1  , c  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 6       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 6                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000051
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x00                    ;   1: const 0
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x18                    ;   1: const 24
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     mov       r24, r4                      ;   1: Mod16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Mod16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x18                    ;   1: const 24
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x07                    ;   1: const 7
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Mod16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x07                    ;   1: const 7
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Mod16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldi       r26, 0x1d                    ;   1: const 29
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     add       r4, r6                       ;   1: Add16
                     adc       r5, r7                       ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x07                    ;   1: const 7
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     mov       r24, r4                      ;   1: Mod16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysDiv16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000051
                     ; #### exit ################           ; 
L_Exit_000050:       adiw      r28, 6                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Anding
Anding:              ; ###########################################
                     ; # Function: Anding                   
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+16, Return Address    
                     ; #         : @Y+14, Preserved Frame Pointer
                     ; #   Locals: @Y+13 , c  size=1 char , Class[_____]
                     ; #         : @Y+11 , s  size=2 short , Class[_____]
                     ; #         : @Y+7  , l  size=4 long , Class[_____]
                     ; #         : @Y+5  , a  size=2 int , Class[_____]
                     ; #         : @Y+3  , a1  size=2 int , Class[_____]
                     ; #         : @Y+1  , a2  size=2 int , Class[_____]
                     ; #         : sizeof(locals) = 13      
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 13                      ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000075
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x00                    ;   1: const 0
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     and       r6, r8                       ;   1: And16
                     and       r7, r9                       ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     ldd       r8, Y+5                      ;   2: a
                     ldd       r9, Y+6                      ;   2:
                     and       r6, r8                       ;   1: And16
                     and       r7, r9                       ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     ldi       r27, 0x00                    ;   1:
                     movw      r4, r26                      ;   1:
                     ldd       r6, Y+3                      ;   2: a1
                     ldd       r7, Y+4                      ;   2:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ldd       r6, Y+1                      ;   2: a2
                     ldd       r7, Y+2                      ;   2:
                     ldi       r26, 0x02                    ;   1: const 2
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     and       r6, r8                       ;   1: And16
                     and       r7, r9                       ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: a
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     mov       r24, r4                      ;   1: Mul 16
                     mov       r25, r5                      ;   1:
                     mov       r26, r6                      ;   1:
                     mov       r27, r7                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r4, r0                       ;   1:
                     mov       r5, r1                       ;   1:
                     ldd       r6, Y+5                      ;   2: a
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+13                     ;   2: c
                     ldi       r26, 0x7f                    ;   1: const 127
                     mov       r5, r26                      ;   1:
                     and       r4, r5                       ;   1: And8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+11                     ;   2: s
                     ldd       r5, Y+12                     ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: l
                     ldd       r5, Y+8                      ;   2:
                     ldd       r6, Y+9                      ;   2:
                     ldd       r7, Y+10                     ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     and       r4, r8                       ;   1: And32
                     and       r5, r9                       ;   1:
                     and       r6, r10                      ;   1:
                     and       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+13                     ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     and       r4, r5                       ;   1: And8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+11                     ;   2: s
                     ldd       r5, Y+12                     ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: l
                     ldd       r5, Y+8                      ;   2:
                     ldd       r6, Y+9                      ;   2:
                     ldd       r7, Y+10                     ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     and       r4, r8                       ;   1: And32
                     and       r5, r9                       ;   1:
                     and       r6, r10                      ;   1:
                     and       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+13                     ;   2: c
                     mov       r0, r4                       ;   1: Signed extend by 1 bytes
                     lsl       r0                           ;   1:
                     clr       r0                           ;   1: 
                     sbc       r0, r0                       ;   1:
                     mov       r5, r0                       ;   1:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+11                     ;   2: s
                     ldd       r5, Y+12                     ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: l
                     ldd       r5, Y+8                      ;   2:
                     ldd       r6, Y+9                      ;   2:
                     ldd       r7, Y+10                     ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     and       r4, r8                       ;   1: And32
                     and       r5, r9                       ;   1:
                     and       r6, r10                      ;   1:
                     and       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+13                     ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     and       r4, r5                       ;   1: And8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+11                     ;   2: s
                     ldd       r5, Y+12                     ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     and       r4, r6                       ;   1: And16
                     and       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: l
                     ldd       r5, Y+8                      ;   2:
                     ldd       r6, Y+9                      ;   2:
                     ldd       r7, Y+10                     ;   2:
                     ldi       r26, 0xff                    ;   1: const -1
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0xff                    ;   1:
                     ldi       r27, 0xff                    ;   1:
                     movw      r10, r26                     ;   1:
                     and       r4, r8                       ;   1: And32
                     and       r5, r9                       ;   1:
                     and       r6, r10                      ;   1:
                     and       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000075
                     ; #### exit ################           ; 
L_Exit_000074:       adiw      r28, 13                      ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Oring
Oring:               ; ###########################################
                     ; # Function: Oring                    
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+10, Return Address    
                     ; #         : @Y+8, Preserved Frame Pointer
                     ; #   Locals: @Y+7  , c  size=1 char , Class[_____]
                     ; #         : @Y+5  , s  size=2 short , Class[_____]
                     ; #         : @Y+1  , l  size=4 long , Class[_____]
                     ; #         : sizeof(locals) = 7       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 7                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000081
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x07                    ;   1: const 7
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r6, r26                      ;   1:
                     Or        r5, r6                       ;   1: Or8
                     Or        r4, r5                       ;   1: Or8
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     Or        r4, r5                       ;   1: Or8
                     ldd       r5, Y+7                      ;   2: c
                     ldi       r26, 0x04                    ;   1: const 4
                     mov       r6, r26                      ;   1:
                     Or        r5, r6                       ;   1: Or8
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0x00                    ;   1: const 0
                     mov       r5, r26                      ;   1:
                     clr       r0                           ;   1: Mul 8
L_MulMult_000082:    sbrc      r4, 0x00                     ; 1/3:
                     add       r0, r5                       ;   1:
                     lsl       r5                           ;   1:
                     breq      L_MulDone_000083             ; 1/2:
                     lsr       r4                           ;   1:
                     brne      L_MulMult_000082             ; 1/2:
L_MulDone_000083:    mov       r4, r0                       ;   1:
                     mov       r0, r4                       ;   1: Signed extend by 1 bytes
                     lsl       r0                           ;   1:
                     clr       r0                           ;   1: 
                     sbc       r0, r0                       ;   1:
                     mov       r5, r0                       ;   1:
                     ldd       r6, Y+5                      ;   2: s
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0x7f                    ;   1: const 127
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     Or        r4, r8                       ;   1: Or32
                     Or        r5, r9                       ;   1:
                     Or        r6, r10                      ;   1:
                     Or        r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     Or        r4, r8                       ;   1: Or32
                     Or        r5, r9                       ;   1:
                     Or        r6, r10                      ;   1:
                     Or        r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     mov       r0, r4                       ;   1: Signed extend by 1 bytes
                     lsl       r0                           ;   1:
                     clr       r0                           ;   1: 
                     sbc       r0, r0                       ;   1:
                     mov       r5, r0                       ;   1:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     Or        r4, r8                       ;   1: Or32
                     Or        r5, r9                       ;   1:
                     Or        r6, r10                      ;   1:
                     Or        r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     Or        r4, r5                       ;   1: Or8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     Or        r4, r6                       ;   1: Or16
                     Or        r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const -1
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0xff                    ;   1:
                     ldi       r27, 0xff                    ;   1:
                     movw      r10, r26                     ;   1:
                     Or        r4, r8                       ;   1: Or32
                     Or        r5, r9                       ;   1:
                     Or        r6, r10                      ;   1:
                     Or        r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000081
                     ; #### exit ################           ; 
L_Exit_000080:       adiw      r28, 7                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            

                     .global   Xoring
Xoring:              ; ###########################################
                     ; # Function: Xoring                   
                     ; #   Return: void                     
                     ; #   Params: <none>                   
                     ; #   CPU   : @Y+10, Return Address    
                     ; #         : @Y+8, Preserved Frame Pointer
                     ; #   Locals: @Y+7  , c  size=1 char , Class[_____]
                     ; #         : @Y+5  , s  size=2 short , Class[_____]
                     ; #         : @Y+1  , l  size=4 long , Class[_____]
                     ; #         : sizeof(locals) = 7       
                     ; ###########################################
                     ; #### frame setup #########           ; 
                     push      r29                          ;   2: (YH) preserve Frame
                     push      r28                          ;   2: (YL)
                     in        r29, _IO_SPH                 ;   1: FP <- SP
                     in        r28, _IO_SPL                 ;   1:
                     ; #### alloc locals ########           ; 
                     sbiw      r28, 7                       ;   2: FP -= sizeof(locals))
                     out       _IO_SPH, r29                 ;   1: SP <- FP
                     out       _IO_SPL, r28                 ;   1:
                     ; #### body text ###########           ; 
                     ; ==== Compound Statement ============ ; L_compound_Id_000087
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x06                    ;   1: const 6
                     mov       r4, r26                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     eor       r4, r5                       ;   1: Xor8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ldi       r26, 0x05                    ;   1: const 5
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     eor       r4, r5                       ;   1: Xor8
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ldi       r26, 0x05                    ;   1: const 5
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     ldi       r26, 0x02                    ;   1: const 2
                     mov       r6, r26                      ;   1:
                     eor       r5, r6                       ;   1: Xor8
                     eor       r4, r5                       ;   1: Xor8
                     ldi       r26, 0x05                    ;   1: const 5
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldi       r26, 0x01                    ;   1: const 1
                     mov       r4, r26                      ;   1:
                     ldd       r5, Y+7                      ;   2: c
                     eor       r4, r5                       ;   1: Xor8
                     ldd       r5, Y+7                      ;   2: c
                     ldi       r26, 0x05                    ;   1: const 5
                     mov       r6, r26                      ;   1:
                     eor       r5, r6                       ;   1: Xor8
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0x00                    ;   1: const 0
                     mov       r5, r26                      ;   1:
                     clr       r0                           ;   1: Mul 8
L_MulMult_000088:    sbrc      r4, 0x00                     ; 1/3:
                     add       r0, r5                       ;   1:
                     lsl       r5                           ;   1:
                     breq      L_MulDone_000089             ; 1/2:
                     lsr       r4                           ;   1:
                     brne      L_MulMult_000088             ; 1/2:
L_MulDone_000089:    mov       r4, r0                       ;   1:
                     mov       r0, r4                       ;   1: Signed extend by 1 bytes
                     lsl       r0                           ;   1:
                     clr       r0                           ;   1: 
                     sbc       r0, r0                       ;   1:
                     mov       r5, r0                       ;   1:
                     ldd       r6, Y+5                      ;   2: s
                     ldd       r7, Y+6                      ;   2:
                     ldi       r26, 0x00                    ;   1: const 0
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     mov       r24, r6                      ;   1: Mul 16
                     mov       r25, r7                      ;   1:
                     mov       r26, r8                      ;   1:
                     mov       r27, r9                      ;   1:
                     rcall     SysMul16                     ;  +3:
                     mov       r6, r0                       ;   1:
                     mov       r7, r1                       ;   1:
                     ldi       r26, 0x03                    ;   1: const 3
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     add       r6, r8                       ;   1: Add16
                     adc       r7, r9                       ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldd       r5, Y+7                      ;   2: c
                     ldi       r26, 0x00                    ;   1: const 0
                     mov       r6, r26                      ;   1:
                     clr       r0                           ;   1: Mul 8
L_MulMult_000092:    sbrc      r5, 0x00                     ; 1/3:
                     add       r0, r6                       ;   1:
                     lsl       r6                           ;   1:
                     breq      L_MulDone_000093             ; 1/2:
                     lsr       r5                           ;   1:
                     brne      L_MulMult_000092             ; 1/2:
L_MulDone_000093:    mov       r5, r0                       ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0x7f                    ;   1: const 127
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0x7f                    ;   1: const 127
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     eor       r4, r8                       ;   1: Xor32
                     eor       r5, r9                       ;   1:
                     eor       r6, r10                      ;   1:
                     eor       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r6, r26                      ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 255
                     ldi       r27, 0x00                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     eor       r4, r8                       ;   1: Xor32
                     eor       r5, r9                       ;   1:
                     eor       r6, r10                      ;   1:
                     eor       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     mov       r0, r4                       ;   1: Signed extend by 1 bytes
                     lsl       r0                           ;   1:
                     clr       r0                           ;   1: 
                     sbc       r0, r0                       ;   1:
                     mov       r5, r0                       ;   1:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0x00                    ;   1:
                     ldi       r27, 0x00                    ;   1:
                     movw      r10, r26                     ;   1:
                     eor       r4, r8                       ;   1: Xor32
                     eor       r5, r9                       ;   1:
                     eor       r6, r10                      ;   1:
                     eor       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+7                      ;   2: c
                     ldi       r26, 0xff                    ;   1: const 255
                     mov       r5, r26                      ;   1:
                     eor       r4, r5                       ;   1: Xor8
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+5                      ;   2: s
                     ldd       r5, Y+6                      ;   2:
                     ldi       r26, 0xff                    ;   1: const 65535
                     ldi       r27, 0xff                    ;   1:
                     movw      r6, r26                      ;   1:
                     eor       r4, r6                       ;   1: Xor16
                     eor       r5, r7                       ;   1:
                     ;      Expr end ------------           
                     ; ==== Expr Statement ================ ; 
                     ldd       r4, Y+1                      ;   2: l
                     ldd       r5, Y+2                      ;   2:
                     ldd       r6, Y+3                      ;   2:
                     ldd       r7, Y+4                      ;   2:
                     ldi       r26, 0xff                    ;   1: const -1
                     ldi       r27, 0xff                    ;   1:
                     movw      r8, r26                      ;   1:
                     ldi       r26, 0xff                    ;   1:
                     ldi       r27, 0xff                    ;   1:
                     movw      r10, r26                     ;   1:
                     eor       r4, r8                       ;   1: Xor32
                     eor       r5, r9                       ;   1:
                     eor       r6, r10                      ;   1:
                     eor       r7, r11                      ;   1:
                     ;      Expr end ------------           
                     ;      Compound End --------           ; L_compound_Id_000087
                     ; #### exit ################           ; 
L_Exit_000086:       adiw      r28, 7                       ;   2: Y += sizeof(locals)
                     out       _IO_SPH, r29                 ;   1: SP <- Y
                     out       _IO_SPL, r28                 ;   1:
                     pop       r28                          ;   2: FP <- preserved Frame
                     pop       r29                          ;   2: 
                     ret                                    ;   4: 
                     
         
                            
                     ;.endseg                               ; === End of TEXT segment ===



                     .end                                   ; End of generated code.

; eof
