// #define GENERICPOINTER      *        // generic pointer
// #define RAMPOINTER          *        // pointer to RAM
// #define ROMPOINTER          *        //            ROM/DATA
// #define NVMPOINTER          *        //            NVM/DATA
// #define CODEPOINTER         *        //            CODE/FUNCTION
// 
// #define REG_VAR(x)          x
// #define NVM_VAR(x)          x
// #define RAM_VAR(x)          x
// #define ROM_VAR(x)          x


//typedef void    *  pgvoid;
//typedef pgvoid  *  pgpgvoid;
// 
// pgvoid      pX;
// pgpgvoid    ppX;

#define ROM_VAR(x)   const  x


typedef void       (* pxvoid_void)(void);


typedef struct {
    int a;
    int b;
} T_S;


const T_S S = { 0x42, 0x43 };
extern const T_S S;

T_S S2;

// 
// // typedef int       * tp_int;
// 
void nmTracePoint(void);
void nmSetEntryPoint(void);

// 
// // int * pA;
// // const unsigned int * pB = 1;
// // int const * pC = 2;
// // int * const pD = 3;
// // 
// // 
// // tp_int       vI1 = 4;
// // tp_int const v2 = 5;
// // const tp_int v3 = 6;
// // 
// // tp_int       iaI1[2] = { 7,  8 };
// // tp_int const iaI2[2] = { 9, 10 };
//onst tp_int iaI3[2] = {11, 12 };
// // 
// // pxvoid_void FnList1[2] = { nmTracePoint, nmTracePoint };
// //pxvoid_void const FnList2[2] = { nmTracePoint, nmTracePoint };

extern const pxvoid_void RomVmHandlers[2];
extern const pxvoid_void RomVmHandlers[2];
extern const pxvoid_void RomVmHandlers[2];
extern const pxvoid_void RomVmHandlers[2];
const pxvoid_void RomVmHandlers[2] = { nmTracePoint, nmSetEntryPoint };
 


extern const int  x;
extern const pxvoid_void  ExpectBlank[2];

extern const int y[4] = { 1,2,3,4 };