
//============================================================================================
// ASM directives

#define ASM_DIRECTIVE_SEGMENT_BEGIN ".segment"                  // declare a new segment    (operand is the segment name)"
#define ASM_DIRECTIVE_SEGMENT_END   ".endseg"                   // end a segment            (operand is empty)"

#define ASM_DIRECTIVE_SPACE         ".space"                    // reserves uninitialized space       (operand is the count of bytes to be reserved)"
#define ASM_DIRECTIVE_BYTE          ".byte"                     // defines an initialized byte value  (operand is a single 8 bit )"
#define ASM_DIRECTIVE_WORD          ".word"                     // defines an initialized word value  (operand is a single 16 bit value )"
#define ASM_DIRECTIVE_DWORD         ".dword"                    // defines an initialized dword value (operand is a single 32 bit value )"


//============================================================================================
// ASM file layout control

#define LABEL_WIDTH   20
#define OPCODE_WIDTH  10
#define OPERAND_WIDTH 15
#define ASSEMBLER_WIDTH (OPCODE_WIDTH+OPERAND_WIDTH)


//============================================================================================
// Public functions

LPSTR   GenLabel(LPSTR PreFix);

void    GenData(TPDeclSpec pDecl);
void    GenBss(TPDeclSpec pDecl);

/* eof */